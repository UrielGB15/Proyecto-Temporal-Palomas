deck[,1,drop=F]
clc
deck[1,c(T,F,T)]
deck[1,c(T,T,F)]
deck[1,c(1,1,0)]
deck[1,c("face","suit","value")]
deck[,"value"]
deck[,"value",drop=F]
sum(deck[,"value",drop=F])
mean(deck[,"value",drop=F])
mean(deck[,"value",drop=F],na.rm = T)
mean(deck[,"value",drop=F])
mean(deck[,"value"])
clc
source('~/.active-rstudio-document', echo=TRUE)
deal()
deal()
factorial(3)
round(pi)
pi
sample(1:6,replace = T,size = 3)
rm(list=ls())
die <- c(1:6)
die
is.vector(die)
int
int <- 1L
text <- "ace"
int
ace
text
typeof(die)
die
die
die <- 1:6
typeof(die)
die <- seq(from=1,to=6,by=1)
die
typeof
typeof(die)
clc
rm(list=ls())
die <- c(1,2,3,4,5,6)
typeof(die=
)
typeof(die)
clear
int <- c(-1L,5L,2L)
int
typeof(int)
sqrt(2)
sqrt(2)^2
sqrt(2)^2-2
sqrt(5)^2-5
sqrt(5)^2
clc
i
4i
1i
typeof(2i)
cards <- c("ace of spades","king of spades","queen of spades","jack of spades",
"ten of spades")
card
cards
cards <- c("ace of spades","king of spades","queen of spades","jack of spades",
"ten of spades"
)
die
attribute(die)
attributes(die)
4000+1795+587+890+1010+883
rm(list=ls())
die <- c(1,2,3,4,5,6)
names(die)
names(die) <- c(one,two,three,four,five,six)
names(die) <- c("one","two","three","four","five","six")
die
attributes(die)
die
die+1
names(die) <- c("uno","dos","tres","cuatro","cinco","seis")
die
names(die) <- NULL
die
dim(die) <- c(3,2) #dim convierte en un arreglo pero se necesita indicar que es 3X2
die
dim(die) <- c(2,3) #dim convierte en un arreglo pero se necesita indicar que es 2X3
die
dim(die) <- c(1,2,3)
die
die <- c(1:6)
matrix(die,nrow = 2)
matrix(die,nrow = 2,byrow = T)
matrix(die,nrow = 2,byrow = T)
die <- c(1:6)
matrix(die,nrow = 2)
matrix(die,nrow = 2,byrow = T)
help matrix
help("matrix")
matrix(die,nrow = 2,byrow = T, dimnames = c("pares","nones")
matrix(die,nrow = 2,byrow = T, dimnames = c("pares","nones")
)
matrix(die,nrow = 2,byrow = T, dimnames = c("pares","nones"))
matrix(die,nrow = 2,byrow = T, dimnames = list("pares","nones"))
matrix(die,nrow = 2,byrow = T, dimnames = list(c("pares","nones")))
ar <- array( c(11:14, 21:24, 31:34), dim=c(2,2,3) )
ar
@clc
clc
cards <- c("ace","king","queen","jack","ten")
type <- c(rep("spades",length(cards)))
matrix(data = c(cards,type))
clc
matrix(data = c(cards,type),ncol = 2)
array(c(cards,types),dim=c(length(cards),2))
array(c(cards,type),dim=c(length(cards),2))
combine <- c(cards,type)
dim(combine) <- c(length(cards),2)
combine
combine
class(d9e)
class(die)
die
dim(die) <- c(2,3)
class(die)
Sys.time()
Sys.Date()
gender <- factor(c("male","female","female","male"))
gender
typeof(gender)
attributes(gender)
unclass(gender)
gender
as.character(gender)
carta <- c("ace","heart","1")
typeof(carta)
carta <- c("ace","heart","1")
typeof(carta)
carta
carta <- c("ace","heart",1)
carta
typeof(carta)
as.character(1)
as.logical(1)
as.numeric(0)
as.numeric(FALSE)
list1 <- list(100:130, "R", list(T,F))
list1
list2 <- list("ace","hearts", 1)
list2
df <- data.frame(face = c("ace","two","six"),
suit = c(rep("clubs",3)),
value = c(1,2,3))
df
df <- data.frame(face = c("ace","two","six"),
suit = c(rep("clubs",3)),
value = c(1,2,3),stringsAsFactors = FALSE)
df
2^2
2**2
10^2
10**2
clearPushBack()
pt <- which.max(datos$mean)
a = c(1,2,3,4,5)
a(1,1)
a[0]
a[1]
a[1,1]
a[2]
clear
a = c(1:10)
a
a[-1]
a[end]
a
a = c(1:100)
end(a)
a[end(a),1]
(end(a),1)
end(a)[2]
calend
rm(list=ls())
library(readr)
deck <- read_csv("~/Documents/Hand-On_ProgR/deck.csv",
trim_ws = FALSE)
deck <- read_csv("~/Documents/Hand-On_ProgR/deck.csv")
deck2 <- deck
vec <- c(rep(0,5))
vec
vec[1]
vect
vect[1] <- 1000
vect
vect <- c(rep(0,5))
rm(list=ls())
deck <- read_csv("~/Documents/Hand-On_ProgR/deck.csv")
deck2 <- deck
vect <- c(rep(0,5))
vect
vect[1]
vect[1] <- 1000
vect
vect[c(1,3,5)] <- c(1,1,1)
vect
vect
vect[4:6]
vect[4:6] <- vect[4:6]+1
vect
vect <- c(rep(0,5))
vect
vect[1]
vect[1] <- 1000
vect
vect[c(1,3,5)] <- c(1,1,1)
vect[3:5] <- vect[3:5]+1
vect
vect <- c(rep(0,6))
vect
vect[1]
vect[1] <- 1000
vect
vect[c(1,3,5)] <- c(1,1,1)
vect[4:6] <- vect[4:6]+1
vect
vect <- c(rep(0,7))
vect
vect[1]
vect[1] <- 1000
vect
vect[c(1,3,5)] <- c(1,1,1)
vect[4:6] <- vect[4:6]+1
vect
head(deck2)
rm(list=ls())
deck <- read.csv("~/Documents/Hand-On_ProgR/deck.csv")
deck2 <- deck
head(deck)
deck2$new <- c(1:52)
head(deck2)
deck2$new <- []
deck2$new <- NULL
tail(deck2)
deck[c(13,26,39,52),]
which(deck$face=="ace")
deck[ace,]
ace <- which(deck$face=="ace")
deck[ace,]
deck2[c(13,26,39,52),]
ace <- which(deck$face=="ace")
deck2[ace,]
deck2[c(13,26,39,52),]
ace <- which(deck2$face=="ace")
deck2[ace,]
deck2[ace,deck2$value]
deck2[ace,"value"]
deck2$value[ace]
deck2[ace,"value"]
deck2[ace,3]
deck2$value[ace]
deck2[ace,"value"]
deck2[ace,3]
deck2$value[ace]
deck2$value[ace] <- c(rep(14,4))
deck2[ace]
deck2[ace,]
deck2$value[ace] <- c(rep(14,length(deck2$value[ace])))
deck2[ace,]
rm(list=ls())
deck <- read.csv("~/Documents/Hand-On_ProgR/deck.csv")
deck2 <- deck
deck2 <- deck
ace <- which(deck2$face=="ace")
deck2$value[ace] <- c(14,14,14,14)
deck2[value,]
deck2[ace,]
deck2 <- deck
deck[ace,]
deck2$value[ace,] <- 14
deck2$value[ace] <- 14
deck2[ace,]
shuffle <- function(cards){
random <- sample(1:52,size=52,replace = F)
cards[random,]
}
shuffle(deck2)
vect
vect <- c(1,0,1,1,2,1,0)
vec[F,F,F,F,T,F,F]
vec <- c(1,0,1,1,2,1,0)
vec[F,F,F,F,T,F,F]
vec <- c(1,0,1,1,2,1,0)
vec[F,F,F,F,T,F,F]
vec <- c(1,0,1,1,2,1,0)
vec[c(F,F,F,F,T,F,F)]
a %in% x
x <- c("a","b","c")
a %in% x
"a" %in% x
c(1,2) %in% c(3,4,5)
c(1,2,3) %in% c(3,4,5)
c(1,2,3,4) %in% c(3,4,5)
1==T
2==T
clc
cleal
deck2 <- deck
deck2$face
deck2$face=="ace"
(deck2$face=="ace",drop=F)
(deck2$face=="ace",drop=T)
[deck2$face=="ace",drop=T]
deck2$face=="ace"
sum(deck2$face=="ace")
shuffle <- function(cards){
random <- sample(1:52,size=52,replace = F)
cards[random,]
}
deck3 <- shuffle(deck2)
deck3$face=="ace"
deck3$face == deck2$face
deck3$value[deck3$face=="ace"] <- 14
deck3$value[deck3$face=="ace"]
deck3[deck3$face=="ace"]
deck3[deck3$face=="ace",]
deck4 <- deck
deck4$value <- 0
head(deck4)
head(deck4,13)
head(deck4,3)
deck$face=="heart"
deck4$face=="heart"
head(deck4)
deck4$suit=="heart"
deck4$suit=="hearts"
deck4$value[deck4$suit=="hearts"] <- 1
deck4
%(T,F)
any(T,F)
all(T,F)
T xor F
xor(T,T)
xor(T,F)x
xor(T,F)
T|T
!(T)
!F
!(F)
!(2==3)
!(2==2) #Lo de adentro es Falso?
!(2==3)
deck4$face=="queen"
deck4$face=="queen"&deck4$suit=="spades"
deck4$suit
sum(deck4$face=="queen"&deck4$suit=="spades")
deck4$value[deck4$face=="queen"&deck4$suit=="spades"]=14
deck4
deck4$value[deck4$face=="queen"&deck4$suit=="spades"] <- 13
deck4
queen_spades <- deck4$face=="queen" & deck4$suit=="spades"
deck4$value[queen_spades] <- 13
deck4[queen_spades,]
0.5*.4
0.5+.2
0.7*.4
1.4*.4
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
means <- datos$mean/max(datos$mean)
means
means <- datos$mean
means
peak_time <-max(datos$mean)
peak_time
peak_time <-wich.max(datos$mean)
peak_time <-which.max(datos$mean)
peak_time
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_rate,peak_time,type="o",pch=16,
xlim=c(0,1),ylim=c(0,1),col="black", ann=F)
peak_rate
peak_rate <- datos$mean/max(datos$mean)
peak_rate <- datos$mean/max(datos$mean)
peak_rate
max(datos$mean)
datos$mean
max(datos$mean)
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_rate,peak_time,type="o",pch=16,
xlim=c(0,1),ylim=c(0,1),col="black", ann=F)
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_rate,peak_time,type="o",pch=16,
xlim=c(0,3),ylim=c(0,1),col="black", ann=F)
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_rate,peak_time,type="o",pch=16,
xlim=c(0,3),ylim=c(0,4),col="black", ann=F)
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_time,peak_rate,type="o",pch=16,
xlim=c(0,3),ylim=c(0,4),col="black", ann=F)
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_time,peak_rate,type="o",pch=16,
xlim=c(0,3),ylim=c(0,1),col="black", ann=F)
rm(list=ls())
graphics.off()
#layout(matrix(1:4,ncol =2))
par(mar=c(2,2,1,1),oma=c(3,3,2,0))
setwd("~/Desktop/untitled folder/Condicion_Neutro1")
datos <- read.csv("PEAKN38-p105.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_time,peak_rate,type="o",pch=16,
xlim=c(0,4),ylim=c(0,1),col="black", ann=F)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
datos <- read.csv("PEAKN19-p003.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_time,peak_rate,type="o",pch=16,
xlim=c(0,4),ylim=c(0,1),col="blue", ann=F)
length(peak_time)
datos <- read.csv("PEAKN38-p003.csv")
means <- datos$mean
peak_rate <- datos$mean/max(datos$mean,na.rm = T)
peak_time <-which.max(datos$mean)
peak_time <- datos$tiempo / peak_time
plot(peak_time,peak_rate,type="o",pch=16,
xlim=c(0,4),ylim=c(0,1),col="dark green", ann=F)
length(peak_time)
